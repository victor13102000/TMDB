[{"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/index.js":"1","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/App.js":"2","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/Grid.js":"3","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/NewUser.js":"4","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/Register.js":"5","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/Search.js":"6","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/nadvar.js":"7","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/context/AuthContext.jsx":"8","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/GridS.js":"9","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/commons/Cards.js":"10","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/hooks/useInputs.js":"11","/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/commons/CardSearch.js":"12","/home/victoramarilla/bootcamp/TMDB v/src/index.js":"13","/home/victoramarilla/bootcamp/TMDB v/src/App.js":"14","/home/victoramarilla/bootcamp/TMDB v/src/components/Navbar.js":"15","/home/victoramarilla/bootcamp/TMDB v/src/components/SignUp.js":"16","/home/victoramarilla/bootcamp/TMDB v/src/components/SignIn.js":"17","/home/victoramarilla/bootcamp/TMDB/src/index.js":"18","/home/victoramarilla/bootcamp/TMDB/src/App.js":"19","/home/victoramarilla/bootcamp/TMDB/src/components/SignIn.js":"20","/home/victoramarilla/bootcamp/TMDB/src/components/SignUp.js":"21","/home/victoramarilla/bootcamp/TMDB/src/components/Navbar.js":"22","/home/victoramarilla/bootcamp/TMDB/src/components/Card.js":"23","/home/victoramarilla/bootcamp/TMDB/src/components/Grid.js":"24","/home/victoramarilla/bootcamp/TMDB/src/components/Home.js":"25","/home/victoramarilla/bootcamp/TMDB/src/components/GridSearch.js":"26","/home/victoramarilla/bootcamp/TMDB/src/state/store.js":"27","/home/victoramarilla/bootcamp/TMDB/src/state/search.js":"28","/home/victoramarilla/bootcamp/TMDB/src/components/Simple.js":"29"},{"size":393,"mtime":1649603645804,"results":"30","hashOfConfig":"31"},{"size":1425,"mtime":1649603645764,"results":"32","hashOfConfig":"31"},{"size":407,"mtime":1649603645776,"results":"33","hashOfConfig":"31"},{"size":1434,"mtime":1649603645776,"results":"34","hashOfConfig":"31"},{"size":1273,"mtime":1649603645780,"results":"35","hashOfConfig":"31"},{"size":1022,"mtime":1649603645788,"results":"36","hashOfConfig":"31"},{"size":1263,"mtime":1649603645788,"results":"37","hashOfConfig":"31"},{"size":1095,"mtime":1649603645788,"results":"38","hashOfConfig":"31"},{"size":348,"mtime":1649603645776,"results":"39","hashOfConfig":"31"},{"size":554,"mtime":1649603645772,"results":"40","hashOfConfig":"31"},{"size":217,"mtime":1649603645796,"results":"41","hashOfConfig":"31"},{"size":409,"mtime":1649603645772,"results":"42","hashOfConfig":"31"},{"size":360,"mtime":1649608818106,"results":"43","hashOfConfig":"44"},{"size":781,"mtime":1649645077339,"results":"45","hashOfConfig":"44"},{"size":6897,"mtime":1649646215734,"results":"46","hashOfConfig":"44"},{"size":3636,"mtime":1649646084607,"results":"47","hashOfConfig":"44"},{"size":1957,"mtime":1649645913929,"results":"48","hashOfConfig":"44"},{"size":473,"mtime":1649955858643,"results":"49","hashOfConfig":"50"},{"size":1183,"mtime":1649969935223,"results":"51","hashOfConfig":"50"},{"size":1953,"mtime":1649799055761,"results":"52","hashOfConfig":"50"},{"size":3628,"mtime":1649799185638,"results":"53","hashOfConfig":"50"},{"size":8496,"mtime":1649800060857,"results":"54","hashOfConfig":"50"},{"size":544,"mtime":1649799327276,"results":"55","hashOfConfig":"50"},{"size":873,"mtime":1650297172774,"results":"56","hashOfConfig":"50"},{"size":1709,"mtime":1650295329738,"results":"57","hashOfConfig":"50"},{"size":313,"mtime":1649959370103,"results":"58","hashOfConfig":"50"},{"size":321,"mtime":1649958857883,"results":"59","hashOfConfig":"50"},{"size":256,"mtime":1649958833405,"results":"60","hashOfConfig":"50"},{"size":5619,"mtime":1650295448795,"results":"61","hashOfConfig":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ajhrc5",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1h6i522",{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1m49ymh",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/index.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/App.js",["130"],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/Grid.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/NewUser.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/Register.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/Search.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/nadvar.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/context/AuthContext.jsx",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/components/GridS.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/commons/Cards.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/hooks/useInputs.js",[],"/home/victoramarilla/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/commons/CardSearch.js",[],"/home/victoramarilla/bootcamp/TMDB v/src/index.js",[],["131","132"],"/home/victoramarilla/bootcamp/TMDB v/src/App.js",[],"/home/victoramarilla/bootcamp/TMDB v/src/components/Navbar.js",["133","134","135","136","137","138","139","140","141"],"\nimport {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Menu,\n  MenuList,\n  MenuButton\n} from '@chakra-ui/react';\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n} from '@chakra-ui/icons';\nimport { Link as Linked} from 'react-router-dom';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function  WithSubnavigation() {\n  const navigate= useNavigate()\n  const { isOpen, onToggle } = useDisclosure();\n    const user = localStorage.getItem('user')\n    const logOut=()=>{\n      axios.post('http://localhost:3001/api/login/logout')\n      .then(()=>localStorage.removeItem('user'))\n      .then(()=> navigate('/'))\n    }\n  return (\n    <Box>\n      <Flex\n        bg={useColorModeValue('white', 'gray.800')}\n        color={useColorModeValue('gray.600', 'white')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\n        align={'center'}>\n        <Flex\n          flex={{ base: 1, md: 'auto' }}\n          ml={{ base: -2 }}\n          display={{ base: 'flex', md: 'none' }}>\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={'ghost'}\n            aria-label={'Toggle Navigation'}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n          <Text\n          fontSize={'lg'}\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n            fontFamily={'heading'}\n            color={'pink.400'}>\n<Linked to='/'>\n  <strong>\n\n            TMDB\n  </strong>\n</Linked>\n          </Text>\n\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={'flex-end'}\n          direction={'row'}\n          spacing={6}>\n           \n             <Button\n             color={'pink.400'}\n            as={'a'}\n            fontSize={'lg'}\n            fontWeight={400}\n            variant={'link'}\n            href={'#'}>\n               <Linked to='/'>\n\n          GitHub\n               </Linked>\n          </Button>\n           \n           {user? <>\n           <Menu>\n\n           <MenuButton as={Button} bg={'pink.400'} color={'white'} _active={{\n              bg: 'pink.300',\n            }} _hover={{\n              bg: 'pink.300',\n            }} >\n           <strong>\n\n    {user}\n           </strong>\n  </MenuButton>\n          <MenuList  fontFamily={'arial'} bg={'pink.400'} color={'white'} textAlign={'center'}>\n            <Button onClick={logOut} bg={'pink.400'}\n            _hover={{\n              bg:'pink.300'\n            }} _active={{\n              bg:'pink.300'\n            }} color={'white'} textAlign={'center'}>\n\n            <strong>Logout\n              </strong>\n            </Button>\n          </MenuList>\n           </Menu>\n           </>:<>\n           \n          <Button\n            as={'b'}\n            color={'pink.400'}\n            fontSize={'lg'}\n            fontWeight={400}\n            variant={'link'}\n            href={'#'}>\n          <Linked to='/signin'>\n            Sign In\n          </Linked>\n          </Button>\n          <Button\n            display={{ base: 'none', md: 'inline-flex' }}\n            fontSize={'sm'}\n            fontWeight={600}\n            color={'white'}\n            bg={'pink.400'}\n            href={'#'}\n            _hover={{\n              bg: 'pink.300',\n            }}>\n              <Linked to='/signup'>\n            Sign Up\n          </Linked>\n          </Button>\n           </>}\n        \n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const linkColor = useColorModeValue('gray.600', 'gray.200');\n  const linkHoverColor = useColorModeValue('gray.800', 'white');\n  const popoverContentBgColor = useColorModeValue('white', 'gray.800');\n\n  return (\n    <Stack direction={'row'} spacing={4}>\n     \n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  return (\n    <Link\n      href={href}\n      role={'group'}\n      display={'block'}\n      p={2}\n      rounded={'md'}\n      _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\n      <Stack direction={'row'} align={'center'}>\n        <Box>\n          <Text\n            transition={'all .3s ease'}\n            _groupHover={{ color: 'pink.400' }}\n            fontWeight={500}>\n            {label}\n          </Text>\n          <Text fontSize={'sm'}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={'all .3s ease'}\n          transform={'translateX(-10px)'}\n          opacity={0}\n          _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n          justify={'flex-end'}\n          align={'center'}\n          flex={1}>\n          <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue('white', 'gray.800')}\n      p={4}\n      display={{ md: 'none' }}>\n     \n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? '#'}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}>\n        <Text\n          fontWeight={600}\n          color={useColorModeValue('gray.600', 'gray.200')}>\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\n          align={'start'}>\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\n","/home/victoramarilla/bootcamp/TMDB v/src/components/SignUp.js",["142","143"],"import {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  HStack,\n  InputRightElement,\n  Stack,\n  Button,\n  Heading,\n  Text,\n  useColorModeValue,\n  Link,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function SignupCard() {\n  const [showPassword, setShowPassword] = useState(false);\n  const { register, handleSubmit } = useForm();\n  const navigate= useNavigate()\n  const onSubmit = async (dataSingnUp) => {\n   \nconst register= await axios.post('http://localhost:3001/api/register', dataSingnUp)\n\n   await axios.post('http://localhost:3001/api/login', {email: dataSingnUp.email,\n  password: dataSingnUp.password})\n  .then((res)=> localStorage.setItem('user',`${res.data.firstName} ${res.data.lastName}`))\n   .then(()=>navigate('/') )\n\n\n  };\n\n\n\n  return (\n    <Flex\n      minH={\"100vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      bg={useColorModeValue(\"white\")}\n    >\n      <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n        <Stack align={\"center\"}>\n          <Heading fontSize={\"4xl\"} textAlign={\"center\"} color={\"pink.400\"}>\n            Sign up\n          </Heading>\n        </Stack>\n        <Box\n          rounded={\"lg\"}\n          bg={useColorModeValue(\"white\", \"gray.700\")}\n          boxShadow={\"lg\"}\n          p={8}\n        >\n        \n          <Stack spacing={4}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <HStack>\n              <Box>\n                <FormControl id=\"firstName\" isRequired>\n                  <FormLabel>First Name</FormLabel>\n                  <Input {...register(\"firstName\")} type=\"text\" />\n                </FormControl>\n              </Box>\n              <Box>\n                <FormControl id=\"lastName\">\n                  <FormLabel>Last Name</FormLabel>\n                  <Input {...register(\"lastName\")} type=\"text\" />\n                </FormControl>\n              </Box>\n            </HStack>\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input {...register('email')}type=\"email\"/>\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  {...register(\"password\")}\n                  type={showPassword ? \"text\" : \"password\"}\n                />\n                <InputRightElement h={\"full\"}>\n                  <Button\n                    variant={\"ghost\"}\n                    onClick={() =>\n                      setShowPassword((showPassword) => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack spacing={10} pt={2}>\n              <Button\n                type=\"submit\"\n                loadingText=\"Submitting\"\n                size=\"lg\"\n                bg={\"pink.400\"}\n                color={\"white\"}\n                _hover={{\n                  bg: \"pink.300\",\n                }}\n              >\n                Sign up\n              </Button>\n            </Stack>\n            </form>\n\n            <Stack pt={6}>\n              <Text color={'pink.400'}align={\"center\"}>\n                Already a user? Login\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n","/home/victoramarilla/bootcamp/TMDB v/src/components/SignIn.js",["144","145","146"],"import {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Checkbox,\n  Stack,\n  Link,\n  Button,\n  Heading,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SimpleCard() {\n  const navigate=useNavigate()\n  const onSubmit = (dataSingnIn) => {\n     axios.post(\"http://localhost:3001/api/login\", dataSingnIn)\n     .then(res=> res.data)\n     .then(user => localStorage.setItem('user',`${user.firstName} ${user.lastName}`))\n     .then(()=> navigate('/'))\n  };\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <Flex\n      minH={\"100vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      bg={useColorModeValue(\"white\")}\n    >\n      <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n        <Stack align={\"center\"}>\n          <Heading fontSize={\"4xl\"}>Sign in to your account</Heading>\n        </Stack>\n        <Box\n          rounded={\"lg\"}\n          bg={useColorModeValue(\"white\", \"gray.700\")}\n          boxShadow={\"lg\"}\n          p={8}\n        >\n          <Stack spacing={4}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input {...register('email')}type=\"email\" />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input {...register('password')} type=\"password\" />\n            </FormControl>\n            <Stack spacing={10}>\n              <Button\n              type=\"submit\"\n                bg={\"pink.400\"}\n                color={\"white\"}\n                _hover={{\n                  bg: \"pink.300\",\n                }}\n              >\n                Sign in\n              </Button >\n            </Stack>\n            </form>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n","/home/victoramarilla/bootcamp/TMDB/src/index.js",[],["147","148"],"/home/victoramarilla/bootcamp/TMDB/src/App.js",["149"],"import { Route, Routes,useLocation } from \"react-router\";\nimport Navbar from \"./components/Navbar\";\nimport { Heading } from \"@chakra-ui/react\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Home from \"./components/Home\";\nimport GridGeneral from \"./components/Grid\";\nimport  GridSearch from './components/GridSearch'\nimport Simple from \"./components/Simple\";\n\n\n\nconst App = () => {\n  const { search } = useLocation();\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/api/login/wasLogged\").then((userLoged) => {\n      localStorage.setItem(\"user\", userLoged.data)\n    });\n  }, []);\n  return (\n    <>\n      <Heading>\n        <Navbar />\n      </Heading>\n    \n      <Routes>\n        <Route path=\"/\" element={ <Home/> } />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/signin\" element={<SignIn />} />\n        <Route path=\"/media/:type\" element={<GridGeneral/>}/>\n        <Route path=\"/search\" element={<GridSearch/>}/>\n        <Route path=\"/Simpleview\" element={<Simple/>}/>\n      \n        \n      </Routes>\n\n    </>\n  );\n};\n\nexport default App;\n","/home/victoramarilla/bootcamp/TMDB/src/components/SignIn.js",["150","151","152"],"import {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Checkbox,\n  Stack,\n  Link,\n  Button,\n  Heading,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SimpleCard() {\n  const navigate=useNavigate()\n  const onSubmit = (dataSingnIn) => {\n     axios.post(\"http://localhost:3001/login\", dataSingnIn)\n     .then(res=> res.data)\n     .then(user => localStorage.setItem('user',`${user.firstName} ${user.lastName}`))\n     .then(()=> navigate('/'))\n  };\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <Flex\n      minH={\"100vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      bg={useColorModeValue(\"white\")}\n    >\n      <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n        <Stack align={\"center\"}>\n          <Heading fontSize={\"4xl\"}>Sign in to your account</Heading>\n        </Stack>\n        <Box\n          rounded={\"lg\"}\n          bg={useColorModeValue(\"white\", \"gray.700\")}\n          boxShadow={\"lg\"}\n          p={8}\n        >\n          <Stack spacing={4}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input {...register('email')}type=\"email\" />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel>Password</FormLabel>\n              <Input {...register('password')} type=\"password\" />\n            </FormControl>\n            <Stack spacing={10}>\n              <Button\n              type=\"submit\"\n                bg={\"pink.400\"}\n                color={\"white\"}\n                _hover={{\n                  bg: \"pink.300\",\n                }}\n              >\n                Sign in\n              </Button >\n            </Stack>\n            </form>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n","/home/victoramarilla/bootcamp/TMDB/src/components/SignUp.js",["153","154"],"import {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  HStack,\n  InputRightElement,\n  Stack,\n  Button,\n  Heading,\n  Text,\n  useColorModeValue,\n  Link,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function SignupCard() {\n  const [showPassword, setShowPassword] = useState(false);\n  const { register, handleSubmit } = useForm();\n  const navigate= useNavigate()\n  const onSubmit = async (dataSingnUp) => {\n   \nconst register= await axios.post('http://localhost:3001/register', dataSingnUp)\n\n   await axios.post('http://localhost:3001/login', {email: dataSingnUp.email,\n  password: dataSingnUp.password})\n  .then((res)=> localStorage.setItem('user',`${res.data.firstName} ${res.data.lastName}`))\n   .then(()=>navigate('/') )\n\n\n  };\n\n\n\n  return (\n    <Flex\n      minH={\"100vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      bg={useColorModeValue(\"white\")}\n    >\n      <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\n        <Stack align={\"center\"}>\n          <Heading fontSize={\"4xl\"} textAlign={\"center\"} color={\"pink.400\"}>\n            Sign up\n          </Heading>\n        </Stack>\n        <Box\n          rounded={\"lg\"}\n          bg={useColorModeValue(\"white\", \"gray.700\")}\n          boxShadow={\"lg\"}\n          p={8}\n        >\n        \n          <Stack spacing={4}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <HStack>\n              <Box>\n                <FormControl id=\"firstName\" isRequired>\n                  <FormLabel>First Name</FormLabel>\n                  <Input {...register(\"firstName\")} type=\"text\" />\n                </FormControl>\n              </Box>\n              <Box>\n                <FormControl id=\"lastName\">\n                  <FormLabel>Last Name</FormLabel>\n                  <Input {...register(\"lastName\")} type=\"text\" />\n                </FormControl>\n              </Box>\n            </HStack>\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input {...register('email')}type=\"email\"/>\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  {...register(\"password\")}\n                  type={showPassword ? \"text\" : \"password\"}\n                />\n                <InputRightElement h={\"full\"}>\n                  <Button\n                    variant={\"ghost\"}\n                    onClick={() =>\n                      setShowPassword((showPassword) => !showPassword)\n                    }\n                  >\n                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n            <Stack spacing={10} pt={2}>\n              <Button\n                type=\"submit\"\n                loadingText=\"Submitting\"\n                size=\"lg\"\n                bg={\"pink.400\"}\n                color={\"white\"}\n                _hover={{\n                  bg: \"pink.300\",\n                }}\n              >\n                Sign up\n              </Button>\n            </Stack>\n            </form>\n\n            <Stack pt={6}>\n              <Text color={'pink.400'}align={\"center\"}>\n                Already a user? Login\n              </Text>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n","/home/victoramarilla/bootcamp/TMDB/src/components/Navbar.js",["155","156","157","158","159","160","161","162","163"],"import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Menu,\n  MenuList,\n  MenuButton,\n} from \"@chakra-ui/react\";\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n} from \"@chakra-ui/icons\";\nimport { Link as Linked } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function WithSubnavigation() {\n  const navigate = useNavigate();\n  const { isOpen, onToggle } = useDisclosure();\n  const user = localStorage.getItem(\"user\");\n  const logOut = () => {\n    axios\n      .post(\"http://localhost:3001/login/logout\")\n      .then(() => localStorage.removeItem(\"user\"))\n      .then(() => navigate(\"/\"));\n  };\n  return (\n    <Box>\n      <Flex\n        bg={\"rgba(51,47,83,1) 100%\"}\n        color={useColorModeValue(\"gray.600\", \"white\")}\n        minH={\"60px\"}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={\"solid\"}\n        borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\n        align={\"center\"}\n      >\n        <Flex\n          flex={{ base: 1, md: \"auto\" }}\n          ml={{ base: -2 }}\n          display={{ base: \"flex\", md: \"none\" }}\n        >\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={\"ghost\"}\n            aria-label={\"Toggle Navigation\"}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n          <Text\n            fontSize={\"lg\"}\n            textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n            fontFamily={\"heading\"}\n            color={\"pink.400\"}\n          >\n            <Linked to=\"/\">\n              <strong>TMDB</strong>\n            </Linked>\n          </Text>\n\n          <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n            <DesktopNav />\n          </Flex>\n        </Flex>\n        <Stack\n          flex={{ base: 1, md: 50 }}\n          justify={{ base: \"center\", md: \"center\" }}\n          direction={\"row\"}\n          spacing={6}\n        >\n          <Linked to='/media/movies'>\n          <Button\n            display={{ base: \"none\", md: \"inline-flex\" }}\n            fontSize={\"sm\"}\n            fontWeight={600}\n            color={\"white\"}\n            bgGradient=\"linear(to-r, rgba(51,47,83,1), pink.500)\"\n            href={\"#\"}\n            _hover={{\n              bg: \"pink.300\",\n            }}\n          >\n            Movies\n          </Button>\n          </Linked>\n          <Linked to='/media/tv'>\n          <Button\n            display={{ base: \"none\", md: \"inline-flex\" }}\n            fontSize={\"sm\"}\n            fontWeight={600}\n            color={\"white\"}\n            bgGradient=\"linear(to-r, rgba(51,47,83,1), pink.500)\"\n            href={\"#\"}\n            _hover={{\n              bg: \"pink.300\",\n            }}\n          >\n            TV\n          </Button>\n          </Linked>\n        </Stack>\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={\"flex-end\"}\n          direction={\"row\"}\n          spacing={6}\n        >\n          <Button\n            color={\"pink.400\"}\n            as={\"a\"}\n            fontSize={\"lg\"}\n            fontWeight={400}\n            variant={\"link\"}\n            href={\"#\"}\n          >\n            <Linked to=\"/\">GitHub</Linked>\n          </Button>\n\n          {user ? (\n            <>\n              <Menu>\n                <MenuButton\n                  as={Button}\n                  bg={\"pink.400\"}\n                  color={\"white\"}\n                  _active={{\n                    bg: \"pink.300\",\n                  }}\n                  _hover={{\n                    bg: \"pink.300\",\n                  }}\n                >\n                  <strong>{user}</strong>\n                </MenuButton>\n                <MenuList\n                  fontFamily={\"arial\"}\n                  bg={\"pink.400\"}\n                  color={\"white\"}\n                  textAlign={\"center\"}\n                >\n                  <Button\n                    onClick={logOut}\n                    bg={\"pink.400\"}\n                    _hover={{\n                      bg: \"pink.300\",\n                    }}\n                    _active={{\n                      bg: \"pink.300\",\n                    }}\n                    color={\"white\"}\n                    textAlign={\"center\"}\n                  >\n                    <strong>Logout</strong>\n                  </Button>\n                </MenuList>\n              </Menu>\n            </>\n          ) : (\n            <>\n              <Button\n                as={\"b\"}\n                color={\"pink.400\"}\n                fontSize={\"lg\"}\n                fontWeight={400}\n                variant={\"link\"}\n                href={\"#\"}\n              >\n                <Linked to=\"/signin\">Sign In</Linked>\n              </Button>\n              <Button\n                display={{ base: \"none\", md: \"inline-flex\" }}\n                fontSize={\"sm\"}\n                fontWeight={600}\n                color={\"white\"}\n                bgGradient=\"linear(to-r, pink.500 , rgba(51,47,83,1))\"\n                href={\"#\"}\n                _hover={{\n                  bg: \"pink.300\",\n                }}\n              >\n                <Linked to=\"/signup\">Sign Up</Linked>\n              </Button>\n            </>\n          )}\n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const linkColor = useColorModeValue(\"gray.600\", \"gray.200\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"gray.800\");\n\n  return <Stack direction={\"row\"} spacing={4}></Stack>;\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  return (\n    <Link\n      href={href}\n      role={\"group\"}\n      display={\"block\"}\n      p={2}\n      rounded={\"md\"}\n      _hover={{ bg: useColorModeValue(\"pink.50\", \"gray.900\") }}\n    >\n      <Stack direction={\"row\"} align={\"center\"}>\n        <Box>\n          <Text\n            transition={\"all .3s ease\"}\n            _groupHover={{ color: \"pink.400\" }}\n            fontWeight={500}\n          >\n            {label}\n          </Text>\n          <Text fontSize={\"sm\"}>{subLabel}</Text>\n        </Box>\n        <Flex\n          transition={\"all .3s ease\"}\n          transform={\"translateX(-10px)\"}\n          opacity={0}\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\n          justify={\"flex-end\"}\n          align={\"center\"}\n          flex={1}\n        >\n          <Icon color={\"pink.400\"} w={5} h={5} as={ChevronRightIcon} />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      p={4}\n      display={{ md: \"none\" }}\n    ></Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }: NavItem) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? \"#\"}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n","/home/victoramarilla/bootcamp/TMDB/src/components/Card.js",["164","165"],"const Card = ({media})=>{\n\nconsole.log(media)\n\nconst contenido= media.data ? media.data : media\nconst imageUrl= \"https://image.tmdb.org/t/p/w300\"+contenido.poster_path;\n\n\n    return (<>\n <div class=\"card\">\n     <img src={imageUrl}/>\n      <div class=\"card-content\">\n        <h2>{contenido.title}</h2>\n        <p>\n          {contenido.overview}\n        </p>\n        <a href=\"#\" class=\"btn\"\n          > See more information\n          <i class=\"las la-long-arrow-alt-right\"></i>\n        </a>\n      </div>\n    </div>\n    </>)\n}\n\nexport default Card","/home/victoramarilla/bootcamp/TMDB/src/components/Grid.js",[],"/home/victoramarilla/bootcamp/TMDB/src/components/Home.js",["166"],"/home/victoramarilla/bootcamp/TMDB/src/components/GridSearch.js",[],"/home/victoramarilla/bootcamp/TMDB/src/state/store.js",[],"/home/victoramarilla/bootcamp/TMDB/src/state/search.js",[],"/home/victoramarilla/bootcamp/TMDB/src/components/Simple.js",["167","168","169"],{"ruleId":"170","severity":1,"message":"171","line":32,"column":6,"nodeType":"172","endLine":32,"endColumn":8,"suggestions":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":12,"column":3,"nodeType":"180","messageId":"181","endLine":12,"endColumn":10},{"ruleId":"178","severity":1,"message":"182","line":13,"column":3,"nodeType":"180","messageId":"181","endLine":13,"endColumn":17},{"ruleId":"178","severity":1,"message":"183","line":14,"column":3,"nodeType":"180","messageId":"181","endLine":14,"endColumn":17},{"ruleId":"178","severity":1,"message":"184","line":29,"column":10,"nodeType":"180","messageId":"181","endLine":29,"endColumn":19},{"ruleId":"178","severity":1,"message":"185","line":171,"column":9,"nodeType":"180","messageId":"181","endLine":171,"endColumn":18},{"ruleId":"178","severity":1,"message":"186","line":172,"column":9,"nodeType":"180","messageId":"181","endLine":172,"endColumn":23},{"ruleId":"178","severity":1,"message":"187","line":173,"column":9,"nodeType":"180","messageId":"181","endLine":173,"endColumn":30},{"ruleId":"178","severity":1,"message":"188","line":182,"column":7,"nodeType":"180","messageId":"181","endLine":182,"endColumn":20},{"ruleId":"178","severity":1,"message":"189","line":227,"column":7,"nodeType":"180","messageId":"181","endLine":227,"endColumn":20},{"ruleId":"178","severity":1,"message":"190","line":15,"column":3,"nodeType":"180","messageId":"181","endLine":15,"endColumn":7},{"ruleId":"178","severity":1,"message":"191","line":30,"column":7,"nodeType":"180","messageId":"181","endLine":30,"endColumn":15},{"ruleId":"178","severity":1,"message":"192","line":7,"column":3,"nodeType":"180","messageId":"181","endLine":7,"endColumn":11},{"ruleId":"178","severity":1,"message":"190","line":9,"column":3,"nodeType":"180","messageId":"181","endLine":9,"endColumn":7},{"ruleId":"178","severity":1,"message":"193","line":12,"column":3,"nodeType":"180","messageId":"181","endLine":12,"endColumn":7},{"ruleId":"174","replacedBy":"194"},{"ruleId":"176","replacedBy":"195"},{"ruleId":"178","severity":1,"message":"196","line":16,"column":11,"nodeType":"180","messageId":"181","endLine":16,"endColumn":17},{"ruleId":"178","severity":1,"message":"192","line":7,"column":3,"nodeType":"180","messageId":"181","endLine":7,"endColumn":11},{"ruleId":"178","severity":1,"message":"190","line":9,"column":3,"nodeType":"180","messageId":"181","endLine":9,"endColumn":7},{"ruleId":"178","severity":1,"message":"193","line":12,"column":3,"nodeType":"180","messageId":"181","endLine":12,"endColumn":7},{"ruleId":"178","severity":1,"message":"190","line":15,"column":3,"nodeType":"180","messageId":"181","endLine":15,"endColumn":7},{"ruleId":"178","severity":1,"message":"191","line":30,"column":7,"nodeType":"180","messageId":"181","endLine":30,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":11,"column":3,"nodeType":"180","messageId":"181","endLine":11,"endColumn":10},{"ruleId":"178","severity":1,"message":"182","line":12,"column":3,"nodeType":"180","messageId":"181","endLine":12,"endColumn":17},{"ruleId":"178","severity":1,"message":"183","line":13,"column":3,"nodeType":"180","messageId":"181","endLine":13,"endColumn":17},{"ruleId":"178","severity":1,"message":"184","line":28,"column":10,"nodeType":"180","messageId":"181","endLine":28,"endColumn":19},{"ruleId":"178","severity":1,"message":"185","line":216,"column":9,"nodeType":"180","messageId":"181","endLine":216,"endColumn":18},{"ruleId":"178","severity":1,"message":"186","line":217,"column":9,"nodeType":"180","messageId":"181","endLine":217,"endColumn":23},{"ruleId":"178","severity":1,"message":"187","line":218,"column":9,"nodeType":"180","messageId":"181","endLine":218,"endColumn":30},{"ruleId":"178","severity":1,"message":"188","line":223,"column":7,"nodeType":"180","messageId":"181","endLine":223,"endColumn":20},{"ruleId":"178","severity":1,"message":"189","line":270,"column":7,"nodeType":"180","messageId":"181","endLine":270,"endColumn":20},{"ruleId":"197","severity":1,"message":"198","line":11,"column":6,"nodeType":"199","endLine":11,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":17,"column":9,"nodeType":"199","endLine":18,"endColumn":12},{"ruleId":"178","severity":1,"message":"202","line":24,"column":9,"nodeType":"180","messageId":"181","endLine":24,"endColumn":20},{"ruleId":"178","severity":1,"message":"203","line":3,"column":5,"nodeType":"180","messageId":"181","endLine":3,"endColumn":11},{"ruleId":"178","severity":1,"message":"204","line":10,"column":5,"nodeType":"180","messageId":"181","endLine":10,"endColumn":11},{"ruleId":"178","severity":1,"message":"205","line":15,"column":5,"nodeType":"180","messageId":"181","endLine":15,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toggleAuth'. Either include it or remove the dependency array.","ArrayExpression",["206"],"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'Popover' is defined but never used.","Identifier","unusedVar","'PopoverTrigger' is defined but never used.","'PopoverContent' is defined but never used.","'useEffect' is defined but never used.","'linkColor' is assigned a value but never used.","'linkHoverColor' is assigned a value but never used.","'popoverContentBgColor' is assigned a value but never used.","'DesktopSubNav' is assigned a value but never used.","'MobileNavItem' is assigned a value but never used.","'Link' is defined but never used.","'register' is assigned a value but never used.","'Checkbox' is defined but never used.","'Text' is defined but never used.",["207"],["208"],"'search' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'onClickUser' is assigned a value but never used.","'chakra' is defined but never used.","'Button' is defined but never used.","'VisuallyHidden' is defined but never used.",{"desc":"209","fix":"210"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [toggleAuth]",{"range":"211","text":"212"},[949,951],"[toggleAuth]"]