{"ast":null,"code":"var _jsxFileName = \"/home/victor/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/context/AuthContext.jsx\",\n    _s = $RefreshSig$();\n\n// crear contexto para la auth de un user\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\"; // Antes de usar el hook hay que definir un estado inicial para nuestro contexto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  user: null,\n  //info del user\n  isAuthenticated: false,\n  //si esta logueado o no\n  toggleAuth: () => null //funcion para actualizar nuestro contexto\n\n};\nexport const AuthContext = /*#__PURE__*/createContext(defaultState); // crear componente Provider\n\nconst AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoggedId, setIsLoggedId] = useState({\n    user: null,\n    isAuthenticated: false\n  });\n\n  const toggleAuth = user => {\n    setIsLoggedId({\n      user: user,\n      isAuthenticated: !isLoggedId.isAuthenticated\n    });\n  };\n\n  const logOut = () => {\n    axios.post(\"api/login\").then(() => {\n      setIsLoggedId({\n        user: null,\n        isAuthenticated: false\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...isLoggedId,\n      toggleAuth,\n      logOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"QvvbfEcgsjiN9ag74wZw6B7o2g4=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/victor/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/src/context/AuthContext.jsx"],"names":["createContext","useState","axios","defaultState","user","isAuthenticated","toggleAuth","AuthContext","AuthContextProvider","children","isLoggedId","setIsLoggedId","logOut","post","then"],"mappings":";;;AAAA;AAEA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AACL;AACZC,EAAAA,eAAe,EAAE,KAFA;AAEO;AACxBC,EAAAA,UAAU,EAAE,MAAK,IAHA,CAGM;;AAHN,CAArB;AAMA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAACG,YAAD,CAAjC,C,CAGP;;AAEA,MAAMK,mBAAmB,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;AACzCG,IAAAA,IAAI,EAAE,IADmC;AAEzCC,IAAAA,eAAe,EAAE;AAFwB,GAAD,CAA5C;;AAIA,QAAMC,UAAU,GAAIF,IAAD,IAAQ;AACvBO,IAAAA,aAAa,CAAC;AACVP,MAAAA,IAAI,EAACA,IADK;AAEVC,MAAAA,eAAe,EAAE,CAACK,UAAU,CAACL;AAFnB,KAAD,CAAb;AAIH,GALD;;AAMA,QAAMO,MAAM,GAAG,MAAM;AACjBV,IAAAA,KAAK,CAACW,IAAN,CAAW,WAAX,EAAwBC,IAAxB,CAA6B,MAAM;AACjCH,MAAAA,aAAa,CAAC;AAAEP,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,eAAe,EAAE;AAA/B,OAAD,CAAb;AACD,KAFD;AAGD,GAJH;;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAE,GAAGK,UAAL;AAAiBJ,MAAAA,UAAjB;AAA6BM,MAAAA;AAA7B,KAA7B;AAAA,cAAqEH;AAArE;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlBD;;GAAMD,mB;;KAAAA,mB;AAoBN,eAAeA,mBAAf","sourcesContent":["// crear contexto para la auth de un user\n\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\n\n// Antes de usar el hook hay que definir un estado inicial para nuestro contexto\n\nconst defaultState = {\n    user: null, //info del user\n    isAuthenticated: false, //si esta logueado o no\n    toggleAuth: ()=> null, //funcion para actualizar nuestro contexto\n};\n\nexport const AuthContext = createContext(defaultState);\n\n\n// crear componente Provider\n\nconst AuthContextProvider = ({children})=>{\n    const [isLoggedId, setIsLoggedId] = useState({\n        user: null,\n        isAuthenticated: false\n    });\n    const toggleAuth = (user)=>{\n        setIsLoggedId({\n            user:user,\n            isAuthenticated: !isLoggedId.isAuthenticated\n        })\n    }\n    const logOut = () => {\n        axios.post(\"api/login\").then(() => {\n          setIsLoggedId({ user: null, isAuthenticated: false });\n        });\n      };\n\n    return <AuthContext.Provider value={{ ...isLoggedId, toggleAuth, logOut }}>{children}</AuthContext.Provider>\n}\n\nexport default AuthContextProvider"]},"metadata":{},"sourceType":"module"}