{"ast":null,"code":"function SessionManager(options, serializeUser) {\n  if (typeof options == 'function') {\n    serializeUser = options;\n    options = undefined;\n  }\n\n  options = options || {};\n  this._key = options.key || 'passport';\n  this._serializeUser = serializeUser;\n}\n\nSessionManager.prototype.logIn = function (req, user, cb) {\n  var self = this;\n\n  this._serializeUser(user, req, function (err, obj) {\n    if (err) {\n      return cb(err);\n    } // TODO: Error if session isn't available here.\n\n\n    if (!req.session) {\n      req.session = {};\n    }\n\n    if (!req.session[self._key]) {\n      req.session[self._key] = {};\n    }\n\n    req.session[self._key].user = obj;\n    cb();\n  });\n};\n\nSessionManager.prototype.logOut = function (req, cb) {\n  if (req.session && req.session[this._key]) {\n    delete req.session[this._key].user;\n  }\n\n  cb && cb();\n};\n\nmodule.exports = SessionManager;","map":{"version":3,"sources":["/home/victor/bootcamp/checkpoint-TMDB-victor/checkpoint-TMDB-220101/node_modules/passport/lib/sessionmanager.js"],"names":["SessionManager","options","serializeUser","undefined","_key","key","_serializeUser","prototype","logIn","req","user","cb","self","err","obj","session","logOut","module","exports"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,aAAjC,EAAgD;AAC9C,MAAI,OAAOD,OAAP,IAAkB,UAAtB,EAAkC;AAChCC,IAAAA,aAAa,GAAGD,OAAhB;AACAA,IAAAA,OAAO,GAAGE,SAAV;AACD;;AACDF,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,OAAKG,IAAL,GAAYH,OAAO,CAACI,GAAR,IAAe,UAA3B;AACA,OAAKC,cAAL,GAAsBJ,aAAtB;AACD;;AAEDF,cAAc,CAACO,SAAf,CAAyBC,KAAzB,GAAiC,UAASC,GAAT,EAAcC,IAAd,EAAoBC,EAApB,EAAwB;AACvD,MAAIC,IAAI,GAAG,IAAX;;AACA,OAAKN,cAAL,CAAoBI,IAApB,EAA0BD,GAA1B,EAA+B,UAASI,GAAT,EAAcC,GAAd,EAAmB;AAChD,QAAID,GAAJ,EAAS;AACP,aAAOF,EAAE,CAACE,GAAD,CAAT;AACD,KAH+C,CAIhD;;;AACA,QAAI,CAACJ,GAAG,CAACM,OAAT,EAAkB;AAChBN,MAAAA,GAAG,CAACM,OAAJ,GAAc,EAAd;AACD;;AACD,QAAI,CAACN,GAAG,CAACM,OAAJ,CAAYH,IAAI,CAACR,IAAjB,CAAL,EAA6B;AAC3BK,MAAAA,GAAG,CAACM,OAAJ,CAAYH,IAAI,CAACR,IAAjB,IAAyB,EAAzB;AACD;;AACDK,IAAAA,GAAG,CAACM,OAAJ,CAAYH,IAAI,CAACR,IAAjB,EAAuBM,IAAvB,GAA8BI,GAA9B;AACAH,IAAAA,EAAE;AACH,GAbD;AAcD,CAhBD;;AAkBAX,cAAc,CAACO,SAAf,CAAyBS,MAAzB,GAAkC,UAASP,GAAT,EAAcE,EAAd,EAAkB;AAClD,MAAIF,GAAG,CAACM,OAAJ,IAAeN,GAAG,CAACM,OAAJ,CAAY,KAAKX,IAAjB,CAAnB,EAA2C;AACzC,WAAOK,GAAG,CAACM,OAAJ,CAAY,KAAKX,IAAjB,EAAuBM,IAA9B;AACD;;AAEDC,EAAAA,EAAE,IAAIA,EAAE,EAAR;AACD,CAND;;AASAM,MAAM,CAACC,OAAP,GAAiBlB,cAAjB","sourcesContent":["function SessionManager(options, serializeUser) {\n  if (typeof options == 'function') {\n    serializeUser = options;\n    options = undefined;\n  }\n  options = options || {};\n  \n  this._key = options.key || 'passport';\n  this._serializeUser = serializeUser;\n}\n\nSessionManager.prototype.logIn = function(req, user, cb) {\n  var self = this;\n  this._serializeUser(user, req, function(err, obj) {\n    if (err) {\n      return cb(err);\n    }\n    // TODO: Error if session isn't available here.\n    if (!req.session) {\n      req.session = {};\n    }\n    if (!req.session[self._key]) {\n      req.session[self._key] = {};\n    }\n    req.session[self._key].user = obj;\n    cb();\n  });\n}\n\nSessionManager.prototype.logOut = function(req, cb) {\n  if (req.session && req.session[this._key]) {\n    delete req.session[this._key].user;\n  }\n  \n  cb && cb();\n}\n\n\nmodule.exports = SessionManager;\n"]},"metadata":{},"sourceType":"script"}