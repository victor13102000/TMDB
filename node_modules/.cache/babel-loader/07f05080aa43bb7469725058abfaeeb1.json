{"ast":null,"code":"var _jsxFileName = \"/home/victoramarilla/bootcamp/TMDB/src/components/Simple.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Container, Stack, Text, Image, Flex, VStack, Button, Heading, SimpleGrid, StackDivider, useColorModeValue, List, ListItem } from \"@chakra-ui/react\";\ns;\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Simple() {\n  _s();\n\n  const params = useParams();\n  let {\n    id,\n    type\n  } = params;\n  const [title, setTitle] = useState();\n  const [overview, setOverview] = useState();\n  const [date, setDate] = useState();\n  const [lenguaje, setLenguaje] = useState();\n  const [genres, setGenres] = useState();\n  const [productioncompanies, setProduction_companies] = useState();\n  const [imag, setImag] = useState();\n  const userId = parseInt(localStorage.getItem(\"userId\"));\n  let isFavorite = false;\n  if (type === \"movies\") type = \"movie\";\n  if (type === \"tvs\") type = \"tv\";\n  useEffect(async () => {\n    const datos = await axios.post(\"http://localhost:3001/search/single\", {\n      id: id,\n      type: type\n    });\n\n    if (datos.data) {\n      console.log(datos.data);\n      setTitle(datos.data.title ? datos.data.title : datos.data.name);\n      setOverview(datos.data.overview);\n      setDate(datos.data.release_date);\n      setLenguaje(datos.data.original_language);\n      setGenres(datos.data.genres);\n      setProduction_companies(datos.data.production_companies);\n      setImag(`https://image.tmdb.org/t/p/w300${datos.data.poster_path}`);\n    }\n  }, []);\n  if (typeof id != \"number\") id = parseInt(id);\n\n  const addtofavorite = () => {\n    axios.post(\"http://localhost:3001/favorites/addtofavorite\", {\n      userId: userId,\n      mediaId: id,\n      type: type\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    bgGradient: \"linear(to-l, #7928CA, #FF0080)\",\n    maxW: \"7xl\",\n    children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        base: 1,\n        lg: 2\n      },\n      spacing: {\n        base: 8,\n        md: 10\n      },\n      py: {\n        base: 18,\n        md: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          rounded: \"md\",\n          alt: \"product image\",\n          src: imag,\n          fit: \"cover\",\n          align: \"center\",\n          w: \"100%\",\n          h: {\n            base: \"100%\",\n            sm: \"400px\",\n            lg: \"500px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: {\n          base: 6,\n          md: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"end\",\n          as: \"header\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            lineHeight: 1.1,\n            fontWeight: 600,\n            fontSize: {\n              base: \"2xl\",\n              sm: \"4xl\",\n              lg: \"5xl\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              onClick: addtofavorite,\n              as: StarIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          as: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            lineHeight: 1.1,\n            fontWeight: 600,\n            fontSize: {\n              base: \"2xl\",\n              sm: \"4xl\",\n              lg: \"5xl\"\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: useColorModeValue(\"gray.900\", \"gray.400\"),\n            fontWeight: 300,\n            fontSize: \"2xl\",\n            children: [date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 22\n            }, this), lenguaje === \"en\" && \"language: English\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: {\n            base: 4,\n            sm: 6\n          },\n          direction: \"column\",\n          divider: /*#__PURE__*/_jsxDEV(StackDivider, {\n            borderColor: useColorModeValue(\"gray.200\", \"gray.600\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            spacing: {\n              base: 4,\n              sm: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"lg\",\n              children: overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: {\n                base: \"16px\",\n                lg: \"18px\"\n              },\n              color: useColorModeValue(\"yellow.500\", \"yellow.300\"),\n              fontWeight: \"500\",\n              textTransform: \"uppercase\",\n              mb: \"4\",\n              children: \"Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n              columns: {\n                base: 1,\n                md: 2\n              },\n              spacing: 10,\n              children: /*#__PURE__*/_jsxDEV(List, {\n                spacing: 2,\n                children: genres && genres.map(genre => {\n                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: genre.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 30\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: {\n                base: \"16px\",\n                lg: \"18px\"\n              },\n              color: useColorModeValue(\"yellow.500\", \"yellow.300\"),\n              fontWeight: \"500\",\n              textTransform: \"uppercase\",\n              mb: \"4\",\n              children: \"Production Companies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              spacing: 2,\n              children: productioncompanies && productioncompanies.map(companie => {\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    as: \"span\",\n                    fontWeight: \"bold\",\n                    children: companie.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Simple, \"9Ida7Pbjeg0rcpC3yZrK4ke9qDk=\", false, function () {\n  return [useParams, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = Simple;\n\nvar _c;\n\n$RefreshReg$(_c, \"Simple\");","map":{"version":3,"sources":["/home/victoramarilla/bootcamp/TMDB/src/components/Simple.js"],"names":["Box","Container","Stack","Text","Image","Flex","VStack","Button","Heading","SimpleGrid","StackDivider","useColorModeValue","List","ListItem","s","axios","useEffect","useState","useParams","Simple","params","id","type","title","setTitle","overview","setOverview","date","setDate","lenguaje","setLenguaje","genres","setGenres","productioncompanies","setProduction_companies","imag","setImag","userId","parseInt","localStorage","getItem","isFavorite","datos","post","data","console","log","name","release_date","original_language","production_companies","poster_path","addtofavorite","mediaId","base","lg","md","sm","StarIcon","map","genre","companie"],"mappings":"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","sourcesContent":["import {\n  Box,\n\n  Container,\n  Stack,\n  Text,\n  Image,\n  Flex,\n  VStack,\n  Button,\n  Heading,\n  SimpleGrid,\n  StackDivider,\n  useColorModeValue,\n  \n  List,\n  ListItem,\n} from \"@chakra-ui/react\";\ns\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Simple() {\n  const params = useParams();\n  let { id, type } = params;\n  const [title, setTitle] = useState();\n  const [overview, setOverview] = useState();\n  const [date, setDate] = useState();\n  const [lenguaje, setLenguaje] = useState();\n  const [genres, setGenres] = useState();\n  const [productioncompanies, setProduction_companies] = useState();\n  const [imag, setImag] = useState();\n  const userId = parseInt(localStorage.getItem(\"userId\"));\n  let isFavorite = false;\n  if (type === \"movies\") type = \"movie\";\n  if (type === \"tvs\") type = \"tv\";\n\n  useEffect(async () => {\n    const datos = await axios.post(\"http://localhost:3001/search/single\", {\n      id: id,\n      type: type,\n    });\n    if (datos.data) {\n      console.log(datos.data);\n      setTitle(datos.data.title ? datos.data.title : datos.data.name);\n      setOverview(datos.data.overview);\n      setDate(datos.data.release_date);\n      setLenguaje(datos.data.original_language);\n      setGenres(datos.data.genres);\n      setProduction_companies(datos.data.production_companies);\n      setImag(`https://image.tmdb.org/t/p/w300${datos.data.poster_path}`);\n    }\n  }, []);\n\n  if (typeof id != \"number\") id = parseInt(id);\n\n  const addtofavorite = () => {\n    axios.post(\"http://localhost:3001/favorites/addtofavorite\", {\n      userId: userId,\n      mediaId: id,\n      type: type,\n    });\n  };\n\n  return (\n    <Container bgGradient=\"linear(to-l, #7928CA, #FF0080)\" maxW={\"7xl\"}>\n      <SimpleGrid\n        columns={{ base: 1, lg: 2 }}\n        spacing={{ base: 8, md: 10 }}\n        py={{ base: 18, md: 24 }}\n      >\n        <Flex>\n          <Image\n            rounded={\"md\"}\n            alt={\"product image\"}\n            src={imag}\n            fit={\"cover\"}\n            align={\"center\"}\n            w={\"100%\"}\n            h={{ base: \"100%\", sm: \"400px\", lg: \"500px\" }}\n          />\n        </Flex>\n        <Stack spacing={{ base: 6, md: 10 }}>\n          <Box textAlign={\"end\"} as={\"header\"}>\n            <Heading\n              lineHeight={1.1}\n              fontWeight={600}\n              fontSize={{ base: \"2xl\", sm: \"4xl\", lg: \"5xl\" }}\n            >\n              <Icon onClick={addtofavorite} as={StarIcon} />\n            </Heading>\n          </Box>\n          <Box as={\"header\"}>\n            <Heading\n              lineHeight={1.1}\n              fontWeight={600}\n              fontSize={{ base: \"2xl\", sm: \"4xl\", lg: \"5xl\" }}\n            >\n              {title}\n            </Heading>\n            <Text\n              color={useColorModeValue(\"gray.900\", \"gray.400\")}\n              fontWeight={300}\n              fontSize={\"2xl\"}\n            >\n              {date} <br />\n              {lenguaje === \"en\" && \"language: English\"}\n            </Text>\n          </Box>\n\n          <Stack\n            spacing={{ base: 4, sm: 6 }}\n            direction={\"column\"}\n            divider={\n              <StackDivider\n                borderColor={useColorModeValue(\"gray.200\", \"gray.600\")}\n              />\n            }\n          >\n            <VStack spacing={{ base: 4, sm: 6 }}>\n              <Text fontSize={\"lg\"}>{overview}</Text>\n            </VStack>\n            <Box>\n              <Text\n                fontSize={{ base: \"16px\", lg: \"18px\" }}\n                color={useColorModeValue(\"yellow.500\", \"yellow.300\")}\n                fontWeight={\"500\"}\n                textTransform={\"uppercase\"}\n                mb={\"4\"}\n              >\n                Genres\n              </Text>\n\n              <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10}>\n                <List spacing={2}>\n                  {genres &&\n                    genres.map((genre) => {\n                      return <ListItem>{genre.name}</ListItem>;\n                    })}\n                </List>\n              </SimpleGrid>\n            </Box>\n            <Box>\n              <Text\n                fontSize={{ base: \"16px\", lg: \"18px\" }}\n                color={useColorModeValue(\"yellow.500\", \"yellow.300\")}\n                fontWeight={\"500\"}\n                textTransform={\"uppercase\"}\n                mb={\"4\"}\n              >\n                Production Companies\n              </Text>\n              <List spacing={2}>\n                {productioncompanies &&\n                  productioncompanies.map((companie) => {\n                    return (\n                      <ListItem>\n                        <Text as={\"span\"} fontWeight={\"bold\"}>\n                          {companie.name}\n                        </Text>\n                      </ListItem>\n                    );\n                  })}\n              </List>\n            </Box>\n          </Stack>\n        </Stack>\n      </SimpleGrid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}